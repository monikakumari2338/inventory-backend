package com.inventory.mycontroller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.inventory.mydto.TSFCombinedDto;
import com.inventory.mydto.TsfDetailsDto;
import com.inventory.myentity.TsfDetails;
import com.inventory.myentity.TsfHead;
import com.inventory.myentity.TsfReasonCodes;
import com.inventory.myservice.TransferReceiveService;

import io.swagger.v3.oas.annotations.security.SecurityRequirement;

@RestController
@RequestMapping("/transferreceive")
@SecurityRequirement(name = "bearerAuth")
public class TransferReceiveController {

	@Autowired
	private TransferReceiveService transferReceiveService;

	// Api to create Transfer-Receive
	@PostMapping("/create/transfer")
	public ResponseEntity<String> saveTransferReceive(@RequestBody TSFCombinedDto tsfCombinedDto) {
		String tsfID = transferReceiveService.generateTsfId();
		String sucess_msg = transferReceiveService.createTansfer(tsfCombinedDto, tsfID);
		return new ResponseEntity<>(sucess_msg, HttpStatus.OK);
	}

	// Api to get all Transfers Reason Codes
	@GetMapping("/get/reasoncodes")
	public ResponseEntity<List<TsfReasonCodes>> getAllASN() {
		List<TsfReasonCodes> tsfReasonCodes = transferReceiveService.getTsfReasonCodes();
		return new ResponseEntity<>(tsfReasonCodes, HttpStatus.OK);
	}

	// Api to get IN Transfer
	@GetMapping("/get/intransfers/{store}")
	public ResponseEntity<List<TsfHead>> getInTransfers(@PathVariable String store) {
		List<TsfHead> transfers = transferReceiveService.getInTransfers(store);
		return new ResponseEntity<>(transfers, HttpStatus.OK);
	}

	// Api to get OUT Transfer
	@GetMapping("/get/outtransfers/{store}")
	public ResponseEntity<List<TsfHead>> getOutTransfers(@PathVariable String store) {
		List<TsfHead> transfers = transferReceiveService.getOutTransfers(store);
		return new ResponseEntity<>(transfers, HttpStatus.OK);
	}

//
//
	// Api to get Transfer-Receive products on the basis of transferId
	@GetMapping("/getProducts/byTransferid/{transferid}")
	public ResponseEntity<List<TsfDetailsDto>> getTsfProductsById(@PathVariable String transferid) {
		List<TsfDetailsDto> products = transferReceiveService.getTsfProductsById(transferid);
		return new ResponseEntity<>(products, HttpStatus.OK);
	}

//	// Api to get all asn id mapped with transfer receive
//	@GetMapping("/alltransferreceive")
//	public ResponseEntity<List<TransferReceiveInfo>> getAllTransferReceive() {
//		List<TransferReceiveInfo> transferInfoList = transferReceiveService.getAllTransferReceive();
//		return new ResponseEntity<>(transferInfoList, HttpStatus.OK);
//	}

}
