package com.inventory.mycontroller;

import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.inventory.mydto.InventoryAdjustmentCombinedDto;
import com.inventory.myentity.InventoryAdjustment;
import com.inventory.myentity.InventoryAdjustmentProducts;
import com.inventory.myservice.ExcelDataService;
import com.inventory.myservice.FileUploadService;
import com.inventory.myservice.InventoryAdjustmentService;

import io.swagger.v3.oas.annotations.security.SecurityRequirement;

@RestController
@RequestMapping("/inventoryadjustment")
@SecurityRequirement(name="bearerAuth")
public class InventoryAdjustmentController {

	@Autowired
	private InventoryAdjustmentService inventoryAdjustmentService;

	@Autowired
	FileUploadService fileService;
	
	@Autowired
	ExcelDataService excelservice;
	
	@Autowired
	InvoiceRepository repo;
	
	@GetMapping("/")
    public String index() {
        return "uploadPage";
    }

    @PostMapping("/uploadFile")
    public String uploadFile(@RequestParam("file") MultipartFile file, RedirectAttributes redirectAttributes) {

        fileService.uploadFile(file);

        redirectAttributes.addFlashAttribute("message",
            "You have successfully uploaded '"+ file.getOriginalFilename()+"' !");
        try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        return "redirect:/";
    }
    
    @GetMapping("/saveData")
    public String saveExcelData(Model model) {
    	
    	List<Invoice> excelDataAsList = excelservice.getExcelDataAsList();
    	int noOfRecords = excelservice.saveExcelData(excelDataAsList);
    	model.addAttribute("noOfRecords",noOfRecords);
    	return "success";
    }

	// Api to save data in Purchase order table
	@PostMapping("/creation")
	public ResponseEntity<String> add_Products(
			@RequestBody InventoryAdjustmentCombinedDto inventoryAdjustmentCombinedDto) {
		// System.out.println("inventoryAdjustmentCombinedDto :" +
		// inventoryAdjustmentCombinedDto);
		String success = inventoryAdjustmentService.saveInventoryAdjustment(inventoryAdjustmentCombinedDto);
		return new ResponseEntity<>(success, HttpStatus.OK);
	}

	@GetMapping("/reasoncodes")
	public ResponseEntity<List<String>> getReasonCodes() {
		List<String> codes = inventoryAdjustmentService.getAllReasonCodes();
		return new ResponseEntity<>(codes, HttpStatus.OK);
	}

	@GetMapping("/all/adjustments")
	public ResponseEntity<List<InventoryAdjustment>> getAllInventoryadjustments() {
		List<InventoryAdjustment> inventoryAdjustmentList = inventoryAdjustmentService.getAllInventoryAdjustment();
		return new ResponseEntity<>(inventoryAdjustmentList, HttpStatus.OK);
	}

	@GetMapping("/products/id/{adjID}")
	public ResponseEntity<List<InventoryAdjustmentProducts>> getAllInventoryadjustmentProductsByID(
			@PathVariable String adjID) {
		List<InventoryAdjustmentProducts> InventoryAdjustmentProductsList = inventoryAdjustmentService
				.getInventoryAdjustmentProductsByID(adjID);
		return new ResponseEntity<>(InventoryAdjustmentProductsList, HttpStatus.OK);
	}

}
