
package com.inventory.myserviceimpl;

import java.security.SecureRandom;
import java.time.LocalDate;

import java.util.ArrayList;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;

import com.inventory.mydto.DsdDto;
import com.inventory.mydto.StockCountCreationDto;
import com.inventory.mydto.TSFCombinedDto;
import com.inventory.myentity.Category;
import com.inventory.myentity.ProductDetails;
import com.inventory.myentity.StockCountCreation;
import com.inventory.myentity.StockCountCreationProducts;
import com.inventory.myentity.Stores;
import com.inventory.myentity.TsfDetails;
import com.inventory.myentity.TsfHead;
import com.inventory.myexception.ExceptionHandling;
import com.inventory.myrepository.CategoryRepo;
import com.inventory.myrepository.StockCreationProductsRepo;
import com.inventory.myrepository.StockCreationRepo;
import com.inventory.myservice.StockCountCreationService;

import jakarta.transaction.Transactional;

@Service
public class StockCountCreationServiceImpl implements StockCountCreationService {

	@Autowired
	private StockCreationRepo creationRepo;

	@Autowired
	private StockCreationProductsRepo creationProductsRepo;

	@Autowired
	private CategoryRepo categoryRepo;

	// Function to create stock count
	@Override
	public String createStockCount(StockCountCreationDto creationDto) {

		int totalBookQty = 0;
		StockCountCreation ScCreation = new StockCountCreation(generateScIdString(), LocalDate.now(), null,
				creationDto.getReason(), "In Progress", creationDto.getStore(), creationDto.getCategory(), totalBookQty,
				0, 0, 0, null, 0);

		creationRepo.save(ScCreation);

		StockCountCreationProducts ScProducts = new StockCountCreationProducts();
		for (int i = 0; i < creationDto.getCreationProductsDto().size(); i++) {

			// requestedQty = requestedQty +
			// tsfCombinedDto.getTsfDetailsDto().get(i).getQty();

			ScProducts.setSku(creationDto.getCreationProductsDto().get(i).getSku());

		}
		return null;

	}

	public String generateScIdString() {
		final String CHARACTERS = "0123456789";
		final SecureRandom random = new SecureRandom();
		StringBuilder sb = new StringBuilder(10);
		sb.append("IA");
		for (int i = 0; i < 12; i++) {
			sb.append(CHARACTERS.charAt(random.nextInt(CHARACTERS.length())));

		}
		return sb.toString();
	}
}
